
PhoneGap 官方网站：http://www.phonegap.com 
http://blog.csdn.net/cutesource/article/details/7324454


一、PhoneGap和Cordova的关系
首先，搞清楚一个概念，phonegap与cordova之间的区别。其实， phoneGap是原先的名字，Adobe将phoneGap捐给apache之后，起了另外的一个名字——apache cordova，phoneGap的名字也被保留了。博文里也就不区分两者了。


下载安装node.js......选择npm....安装完成
安装相关环境
配置npm的全局模块的存放路径以及cache的路径
在nodejs安装目录下新建node_global和node_cache文件夹。

npm config set prefix "D:\software\nodejs\node_global"
npm config set cache "D:\software\nodejs\node_cache"


Cordova官方教程
http://cordova.apache.org/docs/en/latest/guide/cli/#create-the-app
第三方教程
http://www.yiibai.com/cordova/cordova_first_application.html
一、安装Cordova
下载并安装Cordova全局模块
npm install -g cordova 
检查安装的版本
cordova -v 

二、Cordova开发
1、创建app
cordova create <dir> <pkgname> <appname>
dir:创建应用程序的目录名
pkgname：应用包名
appname：应用名称

比如 cordova create  D:\software\nodejs\projects com.demo1 demo1

2、添加平台
打开您的项目目录，添加需要的platform，比如android

D:\software\nodejs\projects>  cordova platform add android

也可以删除使用的平台
D:\software\nodejs\projects>  cordova platform rm  android

查看已添加的平台
D:\software\nodejs\projects>  cordova platform ls

3、构建和运行
构建
D:\software\nodejs\projects>  cordova build android
运行
D:\software\nodejs\projects>  cordova run android

三、插件
比如Battery Status
添加插件
cordova plugin add cordova-plugin-battery-status
删除插件
cordova plugin rm cordova-plugin-battery-status

自动更新插件
https://github.com/nordnet/cordova-hot-code-push

先安装插件
1、在APP目录下运行cordova plugin add cordova-hot-code-push-plugin
2、在APP目录下运行cordova plugin add cordova-hot-code-push-local-dev-addon
3、安装CLI：npm install -g cordova-hot-code-push-cli
主要是用这个生成检测配置文件，也就是动态生成chcp.json和chcp.manifest生成两个文件

开始配置
4、安装完成后运行cordova-hcp build ，之后www文件夹下面出现chcp.json以及chcp.manifest两个文件
A、chcp.json文件内容说明
{
  "autogenerated": true,
  "release": "2016.08.29-15.52.14",  //版本号
  "content_url": "http://www.123.com/www/",//WWW文件夹所在远程地址
  "update": "now"//分三种情况
// start - app启动时安装更新. 默认值.
// resume - app从后台切换过来的时候安装更新.
// now - web内容下载完毕即安装更新.
}

该文件每次运行cordova-hcp build 都会自动重新生成，为了方便，可以在APP项目的根目录下添加一个模板文件cordova-hcp.json，内容如下：
{
  "autogenerated": true,
  "release": "2016.08.29-16.52.27",
  "content_url": "http://www.123.com/www/",
  "update": "start"
}
B、chcp.manifest为文件清单

5、在APP项目的根目录下会生成一个.chcpenv的文件，打开该文件，编辑更新内容远程地址以及远程配置文件地址，如下：
{
  "content_url": "http://www.123.com/www/",
  "config_url": "http://www.123.com/www/chcp.json"
}

测试运行
6、打包运行APP，如ionic run android
7、随便更改一个APP内的页面内容，然后运行cordova-hcp build 生成最新的配置，
再将整个WWW目录下的所有文件（包含chcp.json及chcp.manifest两个文件）复制到chcp.json内配置好的远程地址下。本例中是复制到远程IIS的WWW目录下
8、重新打开APP（记住要打开两次后才能看到效果），看看刚才的更新效果吧。

启动时将assets目录下的www文件目录拷贝到context.getFilesDir().getAbsolutePath()/{cordova-hot-code-push-plugin}/{releaseVersion}/www



记载SDcard上的html
a、如果html文件存于assets：则加前缀：file:///android_asset/
b、如果html文件存于sdcard：则加前缀：content://com.android.htmlfileprovider/sdcard/
注意：content前缀可能导致异常，直接使用file:///sdcard/ or file:/sdcard/也可以,file:///mnt/sdcard/也没问题
file:///storage/extSdCard




Cordova原理
http://www.cnblogs.com/hubcarl/p/4202784.html





